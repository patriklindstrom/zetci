use clap::{App, Arg, SubCommand};

pub fn get_clap_app() -> App<'static, 'static> {
    App::new("set_operations")
        .version("1.0")
        .author("Your Name <your.email@example.com>")
        .about("Performs set operations on csv files")
        .arg(Arg::with_name("debug")
            .short("d")
            .long("debug")
            .help("Activate debug mode"))
        .arg(Arg::with_name("OUTPUT")
            .short("o")
            .long("output")
            .value_name("FILE")
            .help("Sets an output file, stdout if not present")
            .takes_value(true))
        .arg(Arg::with_name("files")
            .short("f")
            .long("files")
            .value_name("FILE")
            .help("Sets the input file to use")
            .required(true)
            .min_values(1))
        .subcommand(SubCommand::with_name("UNION")
            .about("Performs union operation on csv files")
            .version("1.0")
            .author("Your Name <your.email@example.com>"))
        .subcommand(SubCommand::with_name("INTERSECT")
            .about("Performs intersection operation on csv files")
            .version("1.0")
            .author("Your Name <your.email@example.com>"))
        .subcommand(SubCommand::with_name("DIFFERENCE")
            .about("Performs difference operation on csv files")
            .version("1.0")
            .author("Your Name <your.email@example.com>"))
}